/*
 * Copyright 2010-2013 Hippo B.V. (http://www.onehippo.com)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *  http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.05.05 at 01:46:58 PM CEST 
//


package org.onehippo.forge.sitemap.components.model;

import org.apache.commons.lang.time.DateFormatUtils;
import org.apache.commons.lang.time.FastDateFormat;

import java.math.BigDecimal;
import java.util.Calendar;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;all>
 *         &lt;element ref="{http://www.sitemaps.org/schemas/sitemap/0.9}loc"/>
 *         &lt;element ref="{http://www.sitemaps.org/schemas/sitemap/0.9}lastmod" minOccurs="0"/>
 *         &lt;element ref="{http://www.sitemaps.org/schemas/sitemap/0.9}changefreq" minOccurs="0"/>
 *         &lt;element ref="{http://www.sitemaps.org/schemas/sitemap/0.9}priority" minOccurs="0"/>
 *       &lt;/all>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.PUBLIC_MEMBER)
@XmlType(name = "", propOrder = {

})
@XmlRootElement(name = "url")
@SuppressWarnings({"unused"})
public class Url implements Comparable<Url> {

    private String loc;
    private Calendar lastmod;
    private ChangeFrequency changeFrequency;
    private BigDecimal priority;

    /**
     * Gets the value of the loc property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @XmlElement(required = true)
    public String getLoc() {
        return loc;
    }

    /**
     * Sets the value of the loc property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLoc(final String value) {
        this.loc = value;
    }

    @XmlElement(name = "lastmod")
    public String getlastModInW3CFormat() {
        if (lastmod == null) {
            return null;
        }
        FastDateFormat dateFormatter = DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT;
        return dateFormatter.format(lastmod);
    }

    /**
     * Gets the value of the lastmod property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @XmlTransient
    public Calendar getLastmod() {
        return (Calendar) lastmod.clone();
    }

    /**
     * Sets the value of the lastmod property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLastmod(final Calendar value) {
        lastmod = value != null ? (Calendar) value.clone() : null;
    }

    @XmlElement(name = "changefreq")
    public String getChangeFrequencyAsString() {
        if (changeFrequency == null) {
            return null;
        }
        return changeFrequency.toString();
    }

    /**
     * Gets the value of the changeFrequency property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @XmlTransient
    public ChangeFrequency getChangeFrequency() {
        return changeFrequency;
    }

    /**
     * Sets the value of the changeFrequency property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setChangeFrequency(final ChangeFrequency value) {
        this.changeFrequency = value;
    }

    /**
     * Gets the value of the priority property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getPriority() {
        return priority;
    }

    /**
     * Sets the value of the priority property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPriority(final BigDecimal value) {
        this.priority = value;
    }

    public int compareTo(final Url o) {
        // The loc is what makes URLs unique, so only compare on that field.
        return loc.compareTo(o.getLoc());
    }

    @Override
    public boolean equals(final Object obj) {
        return (obj instanceof Url) && compareTo((Url) obj) == 0;
    }

    @Override
    public int hashCode() {
        return loc.hashCode();
    }
}
