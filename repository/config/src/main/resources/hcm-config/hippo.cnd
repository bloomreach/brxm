/*
 * Copyright 2007-2018 Hippo
 *
 * Licensed under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

<rep='internal'>
<jcr='http://www.jcp.org/jcr/1.0'>
<nt='http://www.jcp.org/jcr/nt/1.0'>
<mix='http://www.jcp.org/jcr/mix/1.0'>
<hippo='http://www.onehippo.org/jcr/hippo/nt/2.0.4'>

[rep:jarFile] mixin
- rep:jarExpanded (date) mandatory copy
+ rep:jarContents (nt:base) = nt:folder mandatory copy

// DATA TYPES: MARKERS

[hippo:derived] mixin
- hippo:compute (Reference)
  // Indicates the method that is used to compute the derived properties
  // defined by any subtypes that extend this type.
  // should point to a node of type hippo:deriveddefinition
- hippo:related (Reference) multiple
  // A multivalue property that links to all the nodes that where used to
  // compute derived proper

// DATA TYPES: DOCUMENTS

[hippo:request] > nt:base

[hippo:document] > nt:base
- hippo:availability (string) multiple ignore
- hippo:paths (string) multiple

[hippo:handle] > nt:base
- hippo:discriminator (string) multiple // deprecated
+ * (hippo:document) = hippo:document multiple version
+ hippo:request (hippo:request) multiple ignore

[hippo:versionInfo] mixin
- hippo:versionHistory (string)
- hippo:branches (string) multiple

[hippo:branchInfo]  mixin
 - hippo:branchId (string) mandatory
 - hippo:branchName (string) mandatory

[hippo:hardhandle] > mix:versionable mixin

[hippo:harddocument] > hippo:derived, mix:referenceable, mix:versionable mixin

// DATA TYPES: VIRTUAL LAYER

[hippo:facetresult] orderable
- hippo:count (long)
+ * multiple ignore

[hippo:facetbasesearch]
- hippo:queryname (string) mandatory
- hippo:count (long)
+ * (hippo:facetbasesearch) multiple ignore

[hippo:facetsearch] > hippo:facetbasesearch
- hippo:docbase (string) mandatory
- hippo:facets (string) mandatory multiple
+ hippo:resultset (hippo:facetresult) = hippo:facetresult

[hippo:facetselect] > nt:base
- hippo:docbase (string) mandatory
- hippo:facets (string) mandatory multiple
- hippo:values (string) mandatory multiple
- hippo:modes (string) mandatory multiple < 'select', 'stick', 'clear', 'single', 'prefer', 'prefer-single'
+ * multiple ignore

[hippo:mirror]
- hippo:docbase (string) mandatory
+ * multiple ignore


// DATA TYPES: RESOURCES

[hippo:resource]
- jcr:encoding (string)
- jcr:mimeType (string) mandatory
- jcr:data (binary) primary mandatory
- jcr:lastModified (date) mandatory ignore
- hippo:filename (string)
- hippo:text (binary)

[hippo:query] > nt:query

[hippo:compound] abstract

[hippo:container] mixin
+ * (hippo:mirror) multiple
+ * (hippo:facetselect) multiple
+ * (hippo:facetsearch) multiple
+ * (hippo:resource) multiple
+ * (hippo:query) multiple
+ * (hippo:compound) multiple


// DATA TYPES: TRANSLATION

// deprecated
[hippo:translation]
- hippo:language (string) mandatory
- hippo:message (string) mandatory
- hippo:property (string)
- hippo:value (string)
- hippo:class (string)

// deprecated
[hippo:translated] mixin
+ hippo:translation (hippo:translation) multiple

// obsolete
[hippo:lockable] mixin
- hippo:lockExpirationTime (date)

// obsolete
[hippo:lock] > nt:base, mix:lockable, hippo:lockable

[hippo:deleted] > hippo:document, mix:versionable
- hippo:deletedDate (date)
- hippo:deletedBy (string)

// obsolete
[hippo:skipindex] mixin

[hippo:named] mixin
- hippo:name (string) mandatory
