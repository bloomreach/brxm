/*
 * Copyright 2007-2020 Hippo
 *
 * Licensed under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

<nt='http://www.jcp.org/jcr/nt/1.0'>
<mix='http://www.jcp.org/jcr/mix/1.0'>
<hippo='http://www.onehippo.org/jcr/hippo/nt/2.0'>
<hipposys='http://www.onehippo.org/jcr/hipposys/nt/1.0.5'>

// MAJOR RELEASE MARKER NODETYPES (abstract): DO NOT EXTEND!
[hipposys:ntd_v13] abstract
[hipposys:ntd_v13b] abstract

// REPOSITORY: DOCUMENT DATA TYPES AND MARKERS

[hipposys:softdocument] mixin
- hippo:uuid (string) mandatory

[hipposys:softhandle] mixin
- hippo:uuid (string) mandatory

[hipposys:request] > hippo:request, mix:versionable
- *
- * multiple
+ * (nt:base) = nt:unstructured

[hipposys:implementation] mixin
- hipposys:classname (string) mandatory
- hipposys:serialver (long)

[hipposys:facetsubsearch] > hippo:facetbasesearch
- hippo:docbase (string) mandatory
- hippo:facets (string) mandatory multiple
- hipposys:search (string) multiple
+ hippo:resultset (hippo:facetresult) = hippo:facetresult

// REPOSITORY WORKFLOW, OCM AND QUERY

[hipposys:type] > nt:base
- hipposys:nodetype (string) mandatory
- hipposys:subtype (string)
- hipposys:classname (string) mandatory
- hipposys:display (string)

[hipposys:types] > nt:base // deprecated
+ * (hipposys:type) = hipposys:type

[hipposys:workflow] > hipposys:type
- hipposys:privileges (string) multiple
+ hipposys:types (hipposys:types) = hipposys:types // deprecated
+ hipposys:config (nt:unstructured) = nt:unstructured

[hipposys:workflowevent] > hipposys:workflow // deprecated

[hipposys:workflowsimplequeryevent] > hipposys:workflowevent // deprecated
- hipposys:eventconditionoperator (string) mandatory
- hipposys:eventdocument (path)
+ hipposys:eventprecondition (nt:query)
+ hipposys:eventpostcondition (nt:query)
+ hipposys:eventdocument (nt:query)

[hipposys:workflowboundmethodevent] > hipposys:workflowevent // deprecated
- hipposys:eventconditioncategory (string)
- hipposys:eventconditionmethod (string)
- hipposys:eventdocument (path)
+ hipposys:eventdocument (nt:query)

[hipposys:workflowcategory] > nt:base orderable
+ * (hipposys:workflow) = hipposys:workflow

[hipposys:workflowfolder] > nt:base, mix:referenceable
+ * (hipposys:workflowcategory) = hipposys:workflowcategory

[hipposys:ocmquery] > hippo:query // deprecated
- hipposys:classname (string) mandatory
+ hipposys:types (hipposys:types) = hipposys:types mandatory autocreated

[hipposys:ocmqueryfolder] > nt:base // deprecated
+ * (nt:query) = hipposys:ocmquery

[hipposys:queryfolder] > nt:base
+ * (nt:query) = hippo:query
+ * (hipposys:queryfolder)

// REPOSITORY: DERIVED DATA

[hipposys:propertyreference] > nt:base

[hipposys:relativepropertyreference] > hipposys:propertyreference
- hipposys:relPath (string) mandatory
- hipposys:multivalue (boolean)

[hipposys:resolvepropertyreference] > hipposys:propertyreference
- hipposys:relPath (string) mandatory

[hipposys:builtinpropertyreference] > hipposys:propertyreference
- hipposys:method (string) mandatory < 'ancestors'

[hipposys:propertyreferences] orderable
+ * (hipposys:propertyreference)

[hipposys:deriveddefinition] > nt:base
- hipposys:nodetype (string) mandatory
- hipposys:classname (string) mandatory
- hipposys:serialver (long)
+ hipposys:accessed (hipposys:propertyreferences) = hipposys:propertyreferences autocreated
+ hipposys:derived (hipposys:propertyreferences) = hipposys:propertyreferences autocreated

[hipposys:derivativesfolder] > nt:base orderable
+ * (hipposys:deriveddefinition) = hipposys:deriveddefinition multiple

// REPOSITORY: MISCELLANEOUS

[hipposys:temporaryfolder] > nt:unstructured

[hipposys:applicationfolder] > nt:unstructured

// The hipposys type should be used for internal repository purposes
// only, where a transative state is needed allowing any kind of child
// node.  This mixin type should never exist for a longer period than
// an action, typically an upgrade cycle.
[hipposys:unstructured] mixin
- *
- * multiple
+ * multiple

[hipposys:versionable] > mix:versionable mixin

// REPOSITORY: SECURITY

[hipposys:accessmanager] > nt:base
- hipposys:permissioncachesize (long) = '20000' mandatory autocreated

[hipposys:user] > nt:base
- hipposys:securityprovider (string) = 'internal' mandatory autocreated
- hipposys:active (boolean) = true mandatory autocreated
- hipposys:system (boolean)
- hipposys:password (string)
- hipposys:passkey (string)
- hipposys:lastlogin (date)
- hipposys:firstname (string)
- hipposys:lastname (string)
- hipposys:email (string)
- hipposys:previouspasswords (string) multiple
- hipposys:passwordlastmodified (date)

[hipposys:externaluser] > hipposys:user
- hipposys:lastsync (date)
- * (string)

[hipposys:group] > nt:base
- hipposys:securityprovider (string) = 'internal' mandatory autocreated
- hipposys:system (boolean)
- hipposys:members (string) multiple
- hipposys:groups (string) multiple
- hipposys:description (string)

[hipposys:externalgroup] > hipposys:group
- hipposys:syncdate (date)
- * (string)

[hipposys:role] > nt:base
- hipposys:privileges (string) multiple
- hipposys:roles (string) multiple
- hipposys:jcrread (boolean)
- hipposys:jcrwrite (boolean)
- hipposys:jcrremove (boolean)

[hipposys:externalrole] > hipposys:role
- hipposys:securityprovider (string) = 'internal' mandatory autocreated

[hipposys:authrole] > nt:base
- hipposys:users (string) multiple
- hipposys:groups (string) multiple
- hipposys:role (string) mandatory
- hipposys:description (string)

[hipposys:facetrule] > nt:base
- hipposys:facet (string) mandatory
- hipposys:value (string) mandatory
- hipposys:type (string) = 'String' mandatory < 'String', 'Name', 'Reference'
- hipposys:equals (boolean) = 'true' mandatory autocreated
- hipposys:filter (boolean) = 'false' mandatory autocreated
- hipposys:description (string)

[hipposys:domainrule] > nt:base
+ * (hipposys:facetrule) = hipposys:facetrule
- hipposys:description (string)

[hipposys:domain] > nt:base
+ * (hipposys:domainrule) = hipposys:domainrule
+ * (hipposys:authrole) = hipposys:authrole
- hipposys:description (string)

[hipposys:userprovider] >  nt:base
- hipposys:dirlevels (long) = '0' autocreated

[hipposys:groupprovider] >  nt:base
- hipposys:dirlevels (long) = '0' autocreated

[hipposys:roleprovider] >  nt:base

[hipposys:securityprovider] > nt:base orderable
- hipposys:classname (string) mandatory
+ hipposys:userprovider (hipposys:userprovider) = hipposys:userprovider
+ hipposys:groupprovider (hipposys:groupprovider) = hipposys:groupprovider
+ hipposys:roleprovider (hipposys:roleprovider) = hipposys:roleprovider

[hipposys:userfolder] > nt:base
+ * (hipposys:user) = hipposys:user
+ * (hipposys:userfolder) = hipposys:userfolder

[hipposys:groupfolder] > nt:base
+ * (hipposys:group) = hipposys:group
+ * (hipposys:groupfolder) = hipposys:groupfolder

[hipposys:rolefolder] > nt:base
+ * (hipposys:role) = hipposys:role

[hipposys:domainfolder] > nt:base
+ * (hipposys:domain) = hipposys:domain

[hipposys:securityfolder] > nt:base
- hipposys:userspath (string) mandatory
- hipposys:groupspath (string) mandatory
- hipposys:rolespath (string) mandatory
- hipposys:domainspath (string) mandatory
- hipposys:passwordmaxagedays (double)
- hipposys:passwordmaxagedays (long)
+ hipposys:accessmanager (hipposys:accessmanager) = hipposys:accessmanager
+ * (hipposys:securityprovider) = hipposys:securityprovider

[hipposys:module] > nt:base
- hipposys:className (string)
- hipposys:executed (date) // obsolete
- hipposys:cmsonly (boolean)
+ hippo:moduleconfig

[hipposys:modulefolder] > nt:base
+ * (hipposys:module) = hipposys:module

[hipposys:moduleconfig] > nt:base
- * (undefined) multiple
- * (undefined)
+ * (hipposys:moduleconfig)

[hipposys:updaterinfo] > nt:base
- hipposys:description (string)
- hipposys:path (string)
- hipposys:query (string)
- hipposys:language (string)
- hipposys:parameters (string)
- hipposys:script (string)
- hipposys:class (string)
- hipposys:revert (boolean)
- hipposys:throttle (long)
- hipposys:batchsize (long)
- hipposys:dryrun (boolean)
- hipposys:cancelled (boolean)
- hipposys:startedby (string)
- hipposys:cancelledby (string)
- hipposys:starttime (date)
- hipposys:finishtime (date)
- hipposys:updated (binary)
- hipposys:updatedcount (long)
- hipposys:failed (binary)
- hipposys:failedcount (long)
- hipposys:skipped (binary)
- hipposys:skippedcount (long)
- hipposys:log (binary)
- hipposys:logtail (string)
- hipposys:nodetype (string)
- hipposys:loglevel (string)

[hipposys:updaterfolder] > nt:base
+ * (hipposys:updaterinfo)

[hipposys:update] > nt:base, mix:lockable
+ hippo:registry (hipposys:updaterfolder)
+ hippo:queue (hipposys:updaterfolder)
+ hippo:history (hipposys:updaterfolder)

[hipposys:resourcebundle] > nt:base
- * (string)

[hipposys:resourcebundles] > nt:base
+ * (hipposys:resourcebundles)
+ * (hipposys:resourcebundle)

// REPOSITORY: CONFIGURATION ROOT

[hipposys:configuration] > nt:base
+ hippo:workflows (hipposys:workflowfolder) = hipposys:workflowfolder mandatory
+ hippo:documents (hipposys:ocmqueryfolder) = hipposys:ocmqueryfolder // deprecated
+ hippo:temporary (hipposys:temporaryfolder) = hipposys:temporaryfolder autocreated
+ hippo:users (hipposys:userfolder) = hipposys:userfolder
+ hippo:roles (hipposys:rolefolder) = hipposys:rolefolder
+ hippo:groups (hipposys:groupfolder) = hipposys:groupfolder
+ hippo:domains (hipposys:domainfolder) = hipposys:domainfolder
+ hippo:derivatives (hipposys:derivativesfolder) = hipposys:derivativesfolder autocreated mandatory
+ hippo:frontend (hipposys:applicationfolder) = hipposys:applicationfolder
+ hippo:queries (hipposys:queryfolder) = hipposys:queryfolder mandatory autocreated
+ hippo:security (hipposys:securityfolder) = hipposys:securityfolder
+ hippo:modules (hipposys:modulefolder) = hipposys:modulefolder
+ hippo:update (hipposys:update) = hipposys:update autocreated
+ hippo:translations (hipposys:resourcebundles) = hipposys:resourcebundles autocreated
