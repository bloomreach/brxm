/*
 * Copyright 2017-2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@mixin disabled-fab {
  background-color: $grey-300;
  cursor: not-allowed;

  svg {
    fill: $grey-500;
  }
}

@import '../variables';
@import '~open-sans-fontface/sass/variables';
@import '~@bloomreach/dragula/dist/dragula.css';

@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: normal;
  src:
    url('~open-sans-fontface/fonts/Regular/OpenSans-Regular.woff2') format('woff2'),
    url('~open-sans-fontface/fonts/Regular/OpenSans-Regular.woff') format('woff');
}

.hst-fab {
  display: block;
  height: $embedded-link-height;
  min-height: $embedded-link-height;
  min-width: $embedded-link-width;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 0;
  width: $embedded-link-width;
}

.hippo-overlay {
  bottom: 0;
  font-family: $font-family;
  left: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 0;
  z-index: $z-index-overlay;
}

.hippo-overlay-element {
  align-items: flex-start;
  box-sizing: border-box;
  display: none;
  justify-content: space-between;
  pointer-events: auto;
  position: absolute;

  &-visible {
    display: flex;
  }

  &-container {
    border: 1px solid $overlay-container-outline-color;
    pointer-events: none;
    z-index: $z-index-overlay-container;

    &-empty {
      box-shadow: inset 0 0 1px 0 $overlay-container-inline-color, inset 0 0 8px 0 $overlay-container-glow-color;
      pointer-events: auto;
    }

    &-readonly {
      border: 1px dashed $bloomreach-gray-38;
      pointer-events: auto;

      &:hover {
        background-color: rgba($bloomreach-white, .7);

        .hippo-overlay-edit-shared-toggle {
          display: flex;
        }
      }
    }

    .hippo-overlay-edit-shared-toggle {
      align-items: center;
      display: none;
      height: 100%;
      justify-content: center;
      position: absolute;
      width: 100%;
    }
  }

  &-component {
    border: 1px solid $overlay-component-outline-color;
    box-shadow: inset 0 0 1px 0 $overlay-component-inline-color, inset 0 0 8px 0 $overlay-component-glow-color;
    cursor: pointer;
    z-index: $z-index-overlay-component;

    &:hover {
      box-shadow: inset 0 0 160px 0 $overlay-component-hover-shadow-color;
    }

    &-active,
    &-active:hover {
      border-color: $overlay-component-active-outline-color;
      box-shadow:
        inset 0 0 1px 0 $overlay-component-active-glow-color,
        inset 0 0 15px 0 $overlay-component-active-glow-color;
    }
  }
}

.hippo-overlay-label {
  align-items: center;
  color: $overlay-label-color;
  display: flex;
  fill: $overlay-label-color;
  font-size: $overlay-label-font-size;
  pointer-events: none;
  visibility: hidden;

  .hippo-overlay-element-container > & {
    background-color: $overlay-container-label-bgcolor;
    border: 1px solid $overlay-container-label-border-color;
  }

  .hippo-overlay-element-component > & {
    background-color: $overlay-component-label-bgcolor;
    border: 1px solid $overlay-component-label-border-color;
  }

  .hippo-overlay-element-component-active > & {
    background-color: $overlay-component-active-label-bgcolor;
    border: 1px solid $overlay-component-active-label-border-color;
  }

  &.hippo-overlay-label-experiment,
  .hippo-dragging .hippo-overlay-element-container > &,
  .hippo-overlay-element-component:hover > &,
  .hippo-overlay-element-container-empty:hover > &,
  .hippo-overlay-element-container-readonly:hover > & {
    visibility: visible;
  }
}

.hippo-overlay-label-text {
  padding-left: 6px;
  padding-right: 6px;

  .hippo-overlay-label-experiment & {
    display: none;
    padding-left: 2px;
    padding-right: 6px;

    .hippo-overlay-element-component:hover & {
      display: block;
    }
  }
}

.hippo-overlay-lock {
  align-items: center;
  background-color: $overlay-lock-bgcolor;
  cursor: default;
  display: flex;
  fill: $overlay-lock-color;
  float: right;
  height: $overlay-lock-height;
  justify-content: center;
  // prevent the on-hover effect of a component against a container's edge by shifting the lock icon 1px up and right
  margin-right: -1px;
  margin-top: -1px;
  pointer-events: all;

  > svg {
    flex: 0 0 auto;
  }

  &:hover::before {
    // the locked-by text is centered vertically, but wraps when there is not enough horizontal space
    align-self: flex-start;
    background-color: $overlay-lock-bgcolor;
    color: $overlay-lock-color;
    content: attr(data-locked-by);
    flex: 0 1 auto;
    font-size: $overlay-lock-font-size;
    line-height: $overlay-lock-height;
    min-height: $overlay-lock-height;
    padding-left: 6px;
    padding-right: 2px;
  }
}

%hippo-material-btn {
  align-items: center;
  background-color: $overlay-link-bgcolor;
  border-radius: 50%;
  box-shadow: 0 2px 5px 0 $overlay-link-shadow-color;
  cursor: pointer;
  fill: $overlay-link-fill-color;
  justify-content: center;
  padding-top: 1px;  // visually move the icons to the middle of the circle
  transition: background-color $overlay-link-transition, box-shadow $overlay-link-transition;
  z-index: $z-index-overlay-link;
}

.hippo-overlay-element-link-button {
  @extend %hippo-material-btn;

  &:hover {
    background-color: $overlay-link-hover-bgcolor;
  }

  &:active {
    box-shadow: 0 4px 8px 0 $overlay-link-active-shadow-color;
  }

  &.hippo-overlay-element-visible {
    display: flex;
  }

  &.hippo-overlay-element-link-clicked {
    background-color: $overlay-link-clicked-bgcolor;
    transition-duration: 100ms;
  }
}

.hippo-overlay-box-empty {
  display: none;

  .hippo-show-components & {
    display: block;
  }
}

.hippo-show-components .hippo-overlay-box:not(.hippo-overlay-box-container-filled):not(.hst-fab) {
  min-height: $overlay-box-minheight;
}

.hippo-show-components .hst-container-item,
.hippo-dragging {
  audio,
  embed,
  iframe,
  object,
  video {
    pointer-events: none;
  }
}

.hippo-overlay-icon {
  display: none;
  fill: $overlay-icon-fill;
  height: $overlay-icon-size;
  left: 50%;
  margin-left: -($overlay-icon-size / 2);
  margin-top: -($overlay-icon-size / 2);
  pointer-events: none;
  position: absolute;
  top: 50%;
  width: $overlay-icon-size;
}

.hippo-overlay-element-component-drop-area {
  display: none;
  height: 100%;
  position: absolute;
  width: 100%;

  &:hover {
    background: $overlay-container-add-mode-hover-bgcolor;
    cursor: copy;

    .hippo-overlay-element-component-drop-area-before,
    .hippo-overlay-element-component-drop-area-after {
      display: flex;
    }
  }

  .hippo-overlay-element-component-drop-area-before,
  .hippo-overlay-element-component-drop-area-after {
    color: $text-disabled;
    display: none;
    flex: 0 0 50%;

    &:hover {
      color: $bloomreach-blue-primary;
    }

    .hippo-overlay-element-component-drop-area-icons {
      display: flex;
      pointer-events: none;

      svg {
        fill: currentColor;
        pointer-events: none;
      }
    }
  }

  &.hippo-overlay-element-component-direction-horizontal {
    flex-direction: row;

    .hippo-overlay-element-component-drop-area-before {
      align-items: center;
      justify-content: flex-start;

      &:hover {
        box-shadow: inset $overlay-drop-area-shadow-size 0 $overlay-drop-area-shadow-color;
      }

      .hippo-overlay-element-component-drop-area-icons svg {
        transform: rotate(90deg);
      }
    }

    .hippo-overlay-element-component-drop-area-after {
      align-items: center;
      justify-content: flex-end;

      &:hover {
        box-shadow: inset (-$overlay-drop-area-shadow-size) 0 $overlay-drop-area-shadow-color;
      }

      .hippo-overlay-element-component-drop-area-icons {
        flex-direction: row-reverse;

        svg {
          transform: rotate(-90deg);
        }
      }
    }
  }

  &.hippo-overlay-element-component-direction-vertical {
    flex-direction: column;

    .hippo-overlay-element-component-drop-area-before {
      align-items: flex-start;
      justify-content: center;

      &:hover {
        box-shadow: inset 0 $overlay-drop-area-shadow-size $overlay-drop-area-shadow-color;
      }

      .hippo-overlay-element-component-drop-area-icons {
        flex-direction: column;

        svg {
          transform: rotate(180deg);
        }
      }
    }

    .hippo-overlay-element-component-drop-area-after {
      align-items: flex-end;
      justify-content: center;

      &:hover {
        box-shadow: inset 0 (-$overlay-drop-area-shadow-size) $overlay-drop-area-shadow-color;
      }

      .hippo-overlay-element-component-drop-area-icons {
        flex-direction: column-reverse;
      }
    }
  }
}

// Adding a component
.hippo-overlay-add-mode {
  pointer-events: auto;

  .hippo-overlay-element-container .hippo-overlay-label {
    visibility: visible;
  }

  .hippo-overlay-element-component .hippo-overlay-label {
    visibility: hidden;
  }

  .hippo-overlay-element-container-empty:hover,
  .hippo-overlay-element-container-disabled:hover {
    background: $overlay-container-add-mode-hover-bgcolor;

    .hippo-overlay-icon {
      display: block;
    }
  }

  .hippo-overlay-element-container-empty {
    cursor: copy;
  }

  .hippo-overlay-element-container-disabled {
    cursor: not-allowed;
    pointer-events: all;

    .hippo-overlay-icon {
      fill: $bloomreach-red;
    }
  }

  .hippo-overlay-element-component-drop-area {
    display: flex;
  }
}

.hippo-overlay-permeable {
  user-select: none;

  .hippo-overlay,
  .hippo-overlay-element {
    pointer-events: none;
  }
}

.hippo-dragging {
  cursor: grabbing;

  .drop-not-allowed {
    background-color: rgba($red-400, .3);
    cursor: not-allowed;
    pointer-events: all;

    .hippo-overlay-edit-shared-toggle {
      display: none;
    }
  }

  .hippo-overlay-element-container {
    display: flex;
  }

  .hippo-overlay-element-component {
    display: none;
  }
}

.hippo-overlay-element-manage-content-link {
  .hippo-fab-main {
    @extend %hippo-material-btn;

    border: 0;
    display: flex;
    height: 100%;
    padding: 0; // reset user-agent specific padding around buttons
    width: 100%;

    &:hover:not(.hippo-fab-main-disabled) {
      background-color: darken($overlay-link-bgcolor, 12%);
      box-shadow: $overlay-link-shadow-hover !important;
    }

    &:active {
      background-color: darken($overlay-link-bgcolor, 12%);
      box-shadow: $overlay-link-shadow-active !important;
    }

    &-edit-content {
      // center icon visually
      padding-left: 6px;
      padding-top: 2px;
    }

    &-select-document {
      // center icon visually
      padding-left: 2px;
      padding-top: 2px;
    }

    &-open svg {
      fill: $white;
    }

    &-disabled {
      @include disabled-fab;
    }
  }

  .hippo-fab-options {
    align-items: center;
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 100%; // below the main button
    width: 100%;
    z-index: $z-index-overlay-manage-content-options;

    &.hippo-fab-options-above-main-button {
      bottom: 100%;
      flex-direction: column-reverse;
      top: initial;

      .hippo-fab-option {
        margin-bottom: 4px;
        margin-top: 0;
      }
    }
  }

  .hippo-fab-option {
    @extend %hippo-material-btn;

    animation-duration: .2s;
    animation-fill-mode: forwards;
    animation-name: enter;
    border: 0;
    display: flex;
    fill: $overlay-link-shadow-color;
    height: 32px;
    margin-top: 4px;
    padding: 0; // reset user-agent specific padding around buttons
    transform: scale(0);
    transform-origin: bottom center;
    width: 32px;

    &:hover:not(.hippo-fab-option-disabled) {
      background-color: darken($overlay-link-bgcolor, 12%);
      box-shadow: $overlay-link-shadow-hover !important;
    }

    &:active {
      background-color: darken($white, 10%);
      box-shadow: $overlay-link-shadow-active !important;
    }

    &-disabled {
      @include disabled-fab;
    }

    &-select-document {
      // center icon visually
      padding-left: 1px;
      padding-top: 1px;
    }

    svg {
      transform: scale(.8);
    }

    &:not(.hippo-fab-option-disabled) {
      svg {
        fill: $white;
      }
    }
  }

  @for $i from 0 to 3 {
    .hippo-fab-option-#{$i} {
      animation-delay: #{.15 * $i}s;
    }
  }
}

@keyframes enter {
  from {
    transform: scale(0);
  }

  to {
    transform: scale(1);
  }
}
