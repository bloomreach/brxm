/*
 * Copyright 2019-2023 Bloomreach
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@import 'variables';

:host {
  cursor: pointer;
  display: grid;
  height: $menu-top-item-height;
  position: relative;

  &.small {
    height: $menu-top-item-small-height;

    .mat-icon {
      width: 16px;
    }
  }
}

.menu-item {
  align-items: center;
  display: grid;
  grid-template-columns: $menu-collapsed-width 1fr;
  padding-right: (2 * $menu-icon-margin);

  .menu-icon {
    display: grid;
    position: relative;

    .reload-icon {
      background-color: $menu-bg;
      border-radius: 50%;
      bottom: -6px;
      height: 19px;
      position: absolute;
      right: 10px;
      width: 19px;
    }
  }

  &::before {
    background-color: $menu-highlighted-text-color;
    content: '';
    height: 100%;
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    transition: opacity 300ms;
    width: 2px;
  }

  &:hover {
    background-color: $menu-hover-bg;
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, .12);

    .mat-icon,
    .caption {
      color: $menu-hover-text-color;
    }
  }

  &.highlighted {
    &::before {
      opacity: 1;
    }

    .mat-icon {
      color: $menu-icon-highlighted-secondary-color;
      transition: color 300ms;

      // Use ::ng-deep to disables view-encapsulation because .menu-icon-boundary class located in svg
      ::ng-deep .menu-icon-boundary {
        fill: $menu-icon-highlighted-primary-color;
      }
    }

    .caption {
      color: $menu-highlighted-text-color;
      transition: color 300ms;
    }

    &:not(.failed):hover {
      .mat-icon,
      .caption {
        color: $menu-hover-text-color;
      }
    }
  }

  &.pressed:not(:hover) {
    background-color: $menu-drawer-bg;

    .mat-icon,
    .caption {
      color: $menu-pressed-text-color;
    }

    &:hover {
      .mat-icon,
      .caption {
        color: $menu-text-color;
      }
    }
  }

  &.failed {
    .mat-icon {
      color: $menu-failed-inactive-color;

      // Use ::ng-deep to disables view-encapsulation because .menu-icon-boundary class located in svg
      ::ng-deep .menu-icon-boundary {
        fill: $menu-failed-inactive-color;
      }
    }

    &:hover {
      .mat-icon {
        color: $menu-failed-color;

        // Use ::ng-deep to disables view-encapsulation because .menu-icon-boundary class located in svg
        ::ng-deep .menu-icon-boundary {
          fill: $menu-failed-color;
        }
      }

      .caption {
        color: $menu-failed-color;
      }

      .reload-icon {
        background-color: $menu-hover-bg;
      }
    }
  }

  &.collapsed {
    padding-right: 0;

    &:hover {
      box-shadow: 0 2px 1px -1px rgba(0, 0, 0, .2), 0 1px 1px 0 rgba(0, 0, 0, .14), 0 1px 3px 0 rgba(0, 0, 0, .12);
      height: 100%;
      left: 0;
      padding-right: (2 * $menu-icon-margin);
      position: absolute;
      top: 0;
    }
  }
}

.mat-icon {
  color: $menu-icon-color;
  justify-self: center;
}

.caption {
  color: $menu-text-color;
  white-space: nowrap;
}

// Specific styling for the bloomreach logo in the first item
:host.home {
  .mat-icon,
  .highlighted .mat-icon {
    color: $menu-text-color-light;
  }

  .highlighted:hover .mat-icon {
    color: $menu-hover-text-color;
  }
}
